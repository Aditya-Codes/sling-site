Working on the conversion of the Sling website to the ASF CMS,
see https://issues.apache.org/jira/browse/SLING-2002

Notes on pages:

  * Start the file with a Title: line to define the page
    title and the first H1 tag.

  * The last modification information from SVN (revision,
    committer, and date/time) is automatically added when
    the page is rendered

  * Excerpts can be added to a page using the Excerpt
    metadata.

  * Metadata from child pages can be referred to in the
    content with the Django variable reference notation
    using the child page name (without extension) as
    its container; e.g. for the child page named
    "childpag":
          {{ children.childpage.headers.excerpt }}
          {{ children.childpage.headers.title }}

  * Content Pages can contain Django templates of the
    form {{...}} and {%...%}. If so, the page content
    is evaluated as a Django template before running
    it through the page template.

  * Any page in the site can be referenced with refs.pagename
    returning properties:
       .path - the absolute path of the page on the site
       .headers - page headers (e.g. .title, .excerpt)
       .content - the raw page content
    All pages in the children namespace are also available in
    the refs namespace
    

Some usefull hints:

  * Printing title of another page "handler":
       {{ refs.handler.headers.title }}

  * Printing excerpt of another page "handler":
       {{ refs.handler.headers.excerpt }}
  
  * Linking to another page "handler":
       ({{ refs.handler.path }})
       
  * Printing title as a link to another page "handler":
       [{{ refs.handler.headers.title }}]({{ refs.handler.path }})
       
  * Printing excerpt as a link to another page "handler":
       [{{ refs.handler.headers.excerpt }}]({{ refs.handler.path }})
       
  * Print a bullet pointed child page list:
       {% for label, page in children %}* [{{ page.headers.title }}]({{ page.path }})
       {% endfor %}
    Note: It is important to have the first part as a single line,
    otherwise the Django/Markdown combo will create list for each
    entry.
  
  * Code Highlighting works by indenting code by four blanks.
    To indicate the type of highlighting preced the code style text with
    either :::<lexer> to get high lighted code using the given <lexer>
    or #!<lexer> to get high lighted code with line numbers using the
    given <lexer>.
    See http://www.apache.org/dev/cmsref.html#code-hilighter for main info
    See http://pygments.org/docs/lexers/ for supported lexers